{"version":3,"sources":["images/github.svg","components/Badge.jsx","App.js","reportWebVitals.js","index.js"],"names":["Badge","className","href","target","rel","src","logo","alt","App","useState","Brightness","setBrightness","Gamma","setGamma","HueRotation","setHueRotation","Saturation","setSaturation","Sharpen","setSharpen","Contrast","setContrast","Blur","setBlur","Quality","setQuality","ImageFormat","setImageFormat","ImageEdited","setImageEdited","AddImage","setAddImage","baseImage","ImageFormatChange","event","attributes","nodeValue","OptionChange","value","class","placeholder","onChange","type","min","max","tool","step","format","onClick","download","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a481544f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.09a2ef68.svg\";","import logo from '../images/github.svg';\r\n\r\nfunction Badge() {\r\n    return (  \r\n      <div className=\"github-badge github\">\r\n          <a href=\"https://bit.ly/3mMYVKN\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img src={logo} alt=\"github\"/> \r\n          </a>\r\n      </div>  \r\n    );\r\n  }\r\n  \r\n  export default Badge;\r\n  ","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Badge from \"./components/Badge\";\n\nfunction App() {\n  const [Brightness, setBrightness] = useState(\"1\");\n  const [Gamma, setGamma] = useState(\"1\");\n  const [HueRotation, setHueRotation] = useState(\"0\");\n  const [Saturation, setSaturation] = useState(\"1\");\n  const [Sharpen, setSharpen] = useState(\"1\");\n  const [Contrast, setContrast] = useState(\"1\");\n  const [Blur, setBlur] = useState(\"1\");\n  const [Quality, setQuality] = useState(\"100\");\n  const [ImageFormat, setImageFormat] = useState(\"\");\n  const [ImageEdited, setImageEdited] = useState(\"\");\n  const [AddImage, setAddImage] = useState(\"\");\n\n  const defaultImage =\n    \"https://assets3.thrillist.com/v1/image/2834894/1584x1054/crop;jpeg_quality=60.jpg\";\n\n  const baseImage = `https://images.weserv.nl/?url=${\n    AddImage ? AddImage : defaultImage\n  }&q=${Quality}&blur=${Blur}&con=${Contrast}&gam=${Gamma}&mod=${Brightness}&sat=${Saturation}&hue=${HueRotation}&sharp=${Sharpen}&output=${ImageFormat}`;\n\n\n\n  const AddImageChange = (event) => {\n    setAddImage(event.target.value);\n  };\n\n  const ImageEditedChange = () => {\n    setImageEdited(baseImage);\n  };\n\n  const ImageFormatChange = (event) => {\n    setImageFormat(event.target.attributes[0].nodeValue);\n\n  };\n\n  const OptionChange = (event) => {\n    if (event.target.attributes[3].nodeValue === \"brightness\") {\n      setBrightness(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"gamma\") {\n      setGamma(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"saturation\") {\n      setSaturation(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"huerotation\") {\n      setHueRotation(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"sharpen\") {\n      setSharpen(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"blur\") {\n      setBlur(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"quality\") {\n      setQuality(event.target.value);\n    } else if (event.target.attributes[3].nodeValue === \"contrast\") {\n      setContrast(event.target.value);\n    }\n    ImageEditedChange();\n  };\n\n  return (\n    <div className=\"app\">\n      <Badge />\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"column-left\">\n            <div className=\"center-image\">\n              <img src={baseImage} alt=\"editing-canvas\" />\n            </div>\n            <div class=\"input-wrapper\">\n            <input\n              placeholder=\"Enter an image url\"\n              onChange={AddImageChange}\n              value={AddImage}\n            />\n            </div>\n          </div>\n          <div className=\"column-right\">\n            <div className=\"option-container\">\n              <div className=\"filter-section\">\n                <h3 className=\"sub-heading\">Filters</h3>\n                <h4 className=\"sub-heading small\">Brightness</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"brightness\"\n                  value={Brightness}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Contrast</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"contrast\"\n                  value={Contrast}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n\n                <h4 className=\"sub-heading small\">Gamma</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"gamma\"\n                  value={Gamma}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Saturation</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"saturation\"\n                  value={Saturation}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Hue rotation</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"huerotation\"\n                  value={HueRotation}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Sharpen</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"sharpen\"\n                  value={Sharpen}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Blur</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"blur\"\n                  value={Blur}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n                <h4 className=\"sub-heading small\">Quality</h4>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  tool=\"quality\"\n                  value={Quality}\n                  onChange={OptionChange}\n                  step=\"1\"\n                />\n              </div>\n              <h3 className=\"sub-heading\">Choose format</h3>\n              <ul className=\"options\">\n                <li className={ImageFormat === 'jpg' ? 'active': null}>\n                  <button format=\"jpg\" onClick={ImageFormatChange} download>\n                    jpg\n                  </button>\n                </li>\n                <li className={ImageFormat === 'png' ? 'active': null}>\n                  <button format=\"png\" onClick={ImageFormatChange} download>\n                    png\n                  </button>\n                </li>\n                <li className={ImageFormat ==='webp'  ? 'active': null}>\n                  <button format=\"webp\" onClick={ImageFormatChange} download>\n                    webp\n                  </button>\n                </li>\n              </ul>\n\n              <div className=\"download-button\">\n                <a\n                  href={ImageEdited}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  download\n                >\n                  Download\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}